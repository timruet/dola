{"ast":null,"code":"import { domainSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { store } from './store';\nexport const authService = {\n  async setDomain(domaindata) {\n    const res = await fetch('http://localhost:8000/api/addUserDomains', {\n      credentials: 'include',\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(domaindata)\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    // Dispatch the loginSuccess action with the user data\n    store.dispatch(domainSuccess(domaindata));\n    return domaindata;\n  }\n};","map":{"version":3,"names":["domainSuccess","useNavigate","store","authService","setDomain","domaindata","res","fetch","credentials","mode","headers","method","body","JSON","stringify","ok","Error","status","dispatch"],"sources":["/Users/timruttinger/Documents/Career/Projects/dola/client/src/domainService.js"],"sourcesContent":["import { domainSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { store } from './store'\n\n\nexport const authService = {\n    async setDomain(domaindata) {\n        const res = await fetch('http://localhost:8000/api/addUserDomains', { credentials: 'include', mode: \"cors\", headers: { 'Content-Type': 'application/json' }, method: 'post', body: JSON.stringify(domaindata) });\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n        // Dispatch the loginSuccess action with the user data\n        store.dispatch(domainSuccess(domaindata));\n\n        return domaindata;\n    },\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,SAAS;AAG/B,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,SAASA,CAACC,UAAU,EAAE;IACxB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MAAEC,WAAW,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,UAAU;IAAE,CAAC,CAAC;IAChN,IAAI,CAACC,GAAG,CAACS,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACV,GAAG,CAACW,MAAM,CAAC;IAC/B;IACA;IACAf,KAAK,CAACgB,QAAQ,CAAClB,aAAa,CAACK,UAAU,CAAC,CAAC;IAEzC,OAAOA,UAAU;EACrB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}