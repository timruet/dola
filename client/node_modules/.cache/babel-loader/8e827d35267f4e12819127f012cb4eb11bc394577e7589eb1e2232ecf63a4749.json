{"ast":null,"code":"import { loginSuccess, logoutSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport store from './store';\nexport const authService = {\n  async login(userdata) {\n    // Replace this with your actual login logic (e.g., API call)\n    const res = await fetch('http://localhost:8000/api/login', {\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(userdata)\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    // Dispatch the loginSuccess action with the user data\n    store.dispatch(loginSuccess(res));\n  },\n  async logout() {\n    const res = await fetch('http://localhost:8000/api/logout', {\n      mode: \"cors\",\n      method: 'get'\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    // Dispatch the logoutSuccess action\n    store.dispatch(logoutSuccess());\n  }\n};","map":{"version":3,"names":["loginSuccess","logoutSuccess","useNavigate","store","authService","login","userdata","res","fetch","mode","headers","method","body","JSON","stringify","ok","Error","status","dispatch","logout"],"sources":["/Users/timruttinger/Documents/Career/Projects/dola/client/src/authService.js"],"sourcesContent":["import { loginSuccess, logoutSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport store from './store'\n\n\nexport const authService = {\n    async login(userdata) {\n        // Replace this with your actual login logic (e.g., API call)\n        const res = await fetch('http://localhost:8000/api/login', { mode: \"cors\", headers: { 'Content-Type': 'application/json' }, method: 'post', body: JSON.stringify(userdata) });\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n        // Dispatch the loginSuccess action with the user data\n        store.dispatch(loginSuccess(res));\n    },\n\n    async logout() {\n        const res = await fetch('http://localhost:8000/api/logout', { mode: \"cors\", method: 'get' });\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n\n        // Dispatch the logoutSuccess action\n        store.dispatch(logoutSuccess());\n    },\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,aAAa;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAG3B,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,KAAKA,CAACC,QAAQ,EAAE;IAClB;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAAE,CAAC,CAAC;IAC7K,IAAI,CAACC,GAAG,CAACQ,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACT,GAAG,CAACU,MAAM,CAAC;IAC/B;IACA;IACAd,KAAK,CAACe,QAAQ,CAAClB,YAAY,CAACO,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMY,MAAMA,CAAA,EAAG;IACX,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEE,MAAM,EAAE;IAAM,CAAC,CAAC;IAC5F,IAAI,CAACJ,GAAG,CAACQ,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACT,GAAG,CAACU,MAAM,CAAC;IAC/B;;IAEA;IACAd,KAAK,CAACe,QAAQ,CAACjB,aAAa,CAAC,CAAC,CAAC;EACnC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}