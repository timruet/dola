{"ast":null,"code":"import { loginSuccess, logoutSuccess, authSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { store } from './store';\nexport const authService = {\n  async login(userdata) {\n    const res = await fetch('http://localhost:8000/api/login', {\n      credentials: 'include',\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post',\n      body: JSON.stringify(userdata)\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    // Dispatch the loginSuccess action with the user data\n    store.dispatch(loginSuccess(userdata));\n    return userdata;\n  },\n  async logout() {\n    let res = await fetch('http://localhost:8000/api/logout', {\n      credentials: 'include',\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post'\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    // Dispatch the logoutSuccess action\n    store.dispatch(logoutSuccess());\n  },\n  async auth() {\n    let res = await fetch('http://localhost:8000/api/auth', {\n      credentials: 'include',\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'post'\n    });\n    res = await res.json();\n    store.dispatch(authSuccess(res));\n  }\n};","map":{"version":3,"names":["loginSuccess","logoutSuccess","authSuccess","useNavigate","store","authService","login","userdata","res","fetch","credentials","mode","headers","method","body","JSON","stringify","ok","Error","status","dispatch","logout","auth","json"],"sources":["/Users/timruttinger/Documents/Career/Projects/dola/client/src/authService.js"],"sourcesContent":["import { loginSuccess, logoutSuccess, authSuccess } from './authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { store } from './store'\n\n\nexport const authService = {\n    async login(userdata) {\n        const res = await fetch('http://localhost:8000/api/login', { credentials: 'include', mode: \"cors\", headers: { 'Content-Type': 'application/json' }, method: 'post', body: JSON.stringify(userdata) });\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n        // Dispatch the loginSuccess action with the user data\n        store.dispatch(loginSuccess(userdata));\n\n        return userdata;\n    },\n\n    async logout() {\n        let res = await fetch('http://localhost:8000/api/logout', { credentials: 'include', mode: \"cors\", headers: { 'Content-Type': 'application/json' }, method: 'post' });\n        if (!res.ok) {\n            throw new Error(res.status);\n        }\n\n        // Dispatch the logoutSuccess action\n        store.dispatch(logoutSuccess());\n    },\n\n    async auth() {\n        let res = await fetch('http://localhost:8000/api/auth', { credentials: 'include', mode: \"cors\", headers: { 'Content-Type': 'application/json' }, method: 'post' });\n        res = await res.json();\n        store.dispatch(authSuccess(res));\n    }\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,WAAW,QAAQ,aAAa;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,SAAS;AAG/B,OAAO,MAAMC,WAAW,GAAG;EACvB,MAAMC,KAAKA,CAACC,QAAQ,EAAE;IAClB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAAEC,WAAW,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IAAE,CAAC,CAAC;IACrM,IAAI,CAACC,GAAG,CAACS,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACV,GAAG,CAACW,MAAM,CAAC;IAC/B;IACA;IACAf,KAAK,CAACgB,QAAQ,CAACpB,YAAY,CAACO,QAAQ,CAAC,CAAC;IAEtC,OAAOA,QAAQ;EACnB,CAAC;EAED,MAAMc,MAAMA,CAAA,EAAG;IACX,IAAIb,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAAEC,WAAW,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEC,MAAM,EAAE;IAAO,CAAC,CAAC;IACpK,IAAI,CAACL,GAAG,CAACS,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAACV,GAAG,CAACW,MAAM,CAAC;IAC/B;;IAEA;IACAf,KAAK,CAACgB,QAAQ,CAACnB,aAAa,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMqB,IAAIA,CAAA,EAAG;IACT,IAAId,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAAEC,WAAW,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAAEC,MAAM,EAAE;IAAO,CAAC,CAAC;IAClKL,GAAG,GAAG,MAAMA,GAAG,CAACe,IAAI,CAAC,CAAC;IACtBnB,KAAK,CAACgB,QAAQ,CAAClB,WAAW,CAACM,GAAG,CAAC,CAAC;EACpC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}