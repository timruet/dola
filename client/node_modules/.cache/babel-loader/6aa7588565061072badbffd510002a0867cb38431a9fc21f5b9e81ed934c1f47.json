{"ast":null,"code":"var _jsxFileName = \"/Users/timruttinger/Documents/Career/Buildspace/dola/client/src/Pages/Vocabulary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../dist/output.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Vocabulary({\n  domain\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VocabTable, {\n      domain: domain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Vocabulary;\nfunction VocabTable({\n  domain\n}) {\n  _s();\n  const [vocabulary, setVocabulary] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(`http://localhost:8000/api/table?domain=${domain}`);\n      const data = await res.json();\n      setVocabulary(data);\n    }\n    fetchData();\n  }, [domain]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(VocabTable, \"FVBzOBUZbhOGx0waedAS0CKSeTw=\");\n_c2 = VocabTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Vocabulary\");\n$RefreshReg$(_c2, \"VocabTable\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","jsxDEV","_jsxDEV","Fragment","_Fragment","Vocabulary","domain","children","VocabTable","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","vocabulary","setVocabulary","fetchData","res","fetch","data","json","_c2","$RefreshReg$"],"sources":["/Users/timruttinger/Documents/Career/Buildspace/dola/client/src/Pages/Vocabulary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../dist/output.css';\n\n\n\nexport default function Vocabulary({domain}) {\n\n  return (\n    <>\n      <VocabTable domain={domain}/>\n    </>\n  )\n}\n\n\n  function VocabTable({domain}){\n    const [vocabulary, setVocabulary] = useState([]);\n\n    useEffect(()=>{ \n      async function fetchData() {\n        const res = await fetch(`http://localhost:8000/api/table?domain=${domain}`);\n        const data = await res.json();\n        setVocabulary(data);\n      }\n      fetchData();\n    },[domain]);\n\n    return(\n      <>\n      {/* <div id=\"learn\">\n        <NavLink to={`/${domain}/quizz`} className=\"learn-link\">\n          <button type=\"button\" className=\"btn btn-outline-dark\">Learn</button>\n        </NavLink>\n      </div> */}\n      \n{/* <div class=\"relative shadow-md sm:rounded-lg\">\n    <div class=\"pb-4 bg-white dark:bg-gray-900\">\n        <label for=\"table-search\" class=\"sr-only\">Search</label>\n        <div class=\"relative mt-1\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <svg class=\"w-4 h-4 text-gray-500 dark:text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\">\n                    <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"/>\n                </svg>\n            </div>\n            <input type=\"text\" id=\"table-search\" class=\"block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Search for items\"/>\n        </div>\n    </div>\n    <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n        <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n            <tr>\n                <th scope=\"col\" class=\"p-4\">\n                    <div class=\"flex items-center\">\n                        <input id=\"checkbox-all-search\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"/>\n                        <label for=\"checkbox-all-search\" class=\"sr-only\">checkbox</label>\n                    </div>\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                    ID\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                    English\n                </th>\n                <th scope=\"col\" class=\"px-6 py-3\">\n                    German\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n        {vocabulary.map(item => (\n            <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\">\n                <td class=\"w-4 p-4\">\n                    <div class=\"flex items-center\">\n                        <input id=\"checkbox-table-search-1\" type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"/>\n                        <label for=\"checkbox-table-search-1\" class=\"sr-only\">checkbox</label>\n                    </div>\n                </td>\n                <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\n                    {item.id}\n                </th>\n                <td class=\"px-6 py-4\">\n                    {item.english}\n                </td>\n                <td class=\"px-6 py-4\">\n                    {item.german}\n                </td>\n                <td class=\"px-6 py-4\">\n                    <a href=\"#\" class=\"font-medium text-blue-600 dark:text-blue-500 hover:underline\">Edit</a>\n                </td>\n            </tr>))}\n        </tbody>\n    </table>\n</div> */}\n\n       {/* <table className=\"vocabTable\">\n      <big id=\"domain-name\">{domain}</big>\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">German</th>\n            <th scope=\"col\">English</th>\n          </tr>\n        </thead>\n        <tbody>\n          {vocabulary.map(item => (<tr key={item.id}>\n          <th scope=\"row\">{item.id}</th>\n          <td>{item.german}</td>\n          <td>{item.english}</td></tr>))}\n      </tbody>\n</table>  */}\n</>\n  )\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI5B,eAAe,SAASC,UAAUA,CAAC;EAACC;AAAM,CAAC,EAAE;EAE3C,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA,CAACM,UAAU;MAACF,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC7B,CAAC;AAEP;AAACC,EAAA,GAPuBR,UAAU;AAUhC,SAASG,UAAUA,CAAC;EAACF;AAAM,CAAC,EAAC;EAAAQ,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAI;IACZ,eAAekB,SAASA,CAAA,EAAG;MACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,0CAAyCb,MAAO,EAAC,CAAC;MAC3E,MAAMc,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BL,aAAa,CAACI,IAAI,CAAC;IACrB;IACAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,CAACX,MAAM,CAAC,CAAC;EAEX,oBACEJ,OAAA,CAAAE,SAAA,mBAiFJ,CAAC;AAEH;AAACU,EAAA,CAhGUN,UAAU;AAAAc,GAAA,GAAVd,UAAU;AAAA,IAAAK,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}